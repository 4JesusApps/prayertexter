Transform: AWS::Serverless-2016-10-31
Resources:
  Api:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub
        - ${ResourceName} From Stack ${AWS::StackName}
        - ResourceName: Api
      StageName: Prod
      DefinitionBody:
        openapi: '3.0'
        info: {}
        paths:
          /:
            post:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri: !Sub arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PrayerTexter.Arn}/invocations
              responses: {}
      EndpointConfiguration: REGIONAL
      TracingEnabled: true
      Cors:
        MaxAge: 5
  ActivePrayers:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: IntercessorPhone
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: IntercessorPhone
          KeyType: HASH
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
  General:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: Key
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: Key
          KeyType: HASH
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
  Members:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: Phone
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: Phone
          KeyType: HASH
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
  QueuedPrayers:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: IntercessorPhone
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: IntercessorPhone
          KeyType: HASH
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
  PrayerTexter:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: go1.x
    Properties:
# Architecture lines are only needed when running sam local tests on ARM CPU (Mac with apple silicon)
#      Architectures:
#        - arm64
      Description: !Sub
        - Stack ${AWS::StackName} Function ${ResourceName}
        - ResourceName: PrayerTexter
      CodeUri: .
      Handler: bootstrap
      Runtime: provided.al2023
      MemorySize: 128
      Timeout: 30
      Tracing: Active
      Events:
        ApiPOST:
          Type: Api
          Properties:
            Path: /
            Method: POST
            RestApiId: !Ref Api
      Environment:
        Variables:
          ACTIVE_PRAYERS_TABLE_NAME: !Ref ActivePrayers
          ACTIVE_PRAYERS_TABLE_ARN: !GetAtt ActivePrayers.Arn
          GENERAL_TABLE_NAME: !Ref General
          GENERAL_TABLE_ARN: !GetAtt General.Arn
          MEMBERS_TABLE_NAME: !Ref Members
          MEMBERS_TABLE_ARN: !GetAtt Members.Arn
          QUEUED_PRAYERS_TABLE_NAME: !Ref QueuedPrayers
          QUEUED_PRAYERS_TABLE_ARN: !GetAtt QueuedPrayers.Arn
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ActivePrayers
        - DynamoDBCrudPolicy:
            TableName: !Ref General
        - DynamoDBCrudPolicy:
            TableName: !Ref Members
        - DynamoDBCrudPolicy:
            TableName: !Ref QueuedPrayers
  PrayerTexterLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Retain
    Properties:
      LogGroupName: !Sub /aws/lambda/${PrayerTexter}

Outputs:
  PrayerTexter:
    Description: "PrayerTexter"
    Value: !Ref PrayerTexter
  API:
    Description: "API Gateway endpoint URL for the API"
    Value: !Sub "https://${Api}.execute-api.${AWS::Region}.amazonaws.com/Prod"