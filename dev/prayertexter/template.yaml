Transform: AWS::Serverless-2016-10-31

Globals:
  Function:
    Timeout: 60
    MemorySize: 128
    Tracing: Active
    Environment:
      Variables:
        # Env variables need to match specific format. See prayertexter config package for details.
        PRAY_CONF_AWS_DB_PRAYER_ACTIVETABLE: !Ref ActivePrayer
        PRAY_CONF_AWS_DB_INTERCESSORPHONES_TABLE: !Ref General
        PRAY_CONF_AWS_DB_STATETRACKER_TABLE: !Ref General
        PRAY_CONF_AWS_DB_MEMBER_TABLE: !Ref Member
        PRAY_CONF_AWS_DB_PRAYER_QUEUETABLE: !Ref QueuedPrayer

Resources:
  # API gateway that triggers lambda
  LocalTestApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub
        - ${ResourceName} From Stack ${AWS::StackName}
        - ResourceName: Api
      StageName: Prod
      DefinitionBody:
        openapi: '3.0'
        info: {}
        paths:
          /:
            post:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri: !Sub arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PrayerTexter.Arn}/invocations
              responses: {}
      EndpointConfiguration: REGIONAL
      TracingEnabled: true
      Cors:
        MaxAge: 5
  
  # DynamoDB tables
  ActivePrayer:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: IntercessorPhone
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: IntercessorPhone
          KeyType: HASH
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES

  General:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: Key
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: Key
          KeyType: HASH
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES

  Member:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: Phone
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: Phone
          KeyType: HASH
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES

  QueuedPrayer:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: IntercessorPhone
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: IntercessorPhone
          KeyType: HASH
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES

  # Main lambda function
  PrayerTexter:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: go1.x
    Properties:
# Architecture lines are only needed when running sam local tests on ARM CPU (Mac with apple silicon)
#      Architectures:
#        - arm64
      Description: !Sub "Stack ${AWS::StackName} Function PrayerTexter"
      CodeUri: .
      Handler: bootstrap
      Runtime: provided.al2023
      Policies:
        # Grants lambda function access to dynamodb tables
        - DynamoDBCrudPolicy:
            TableName: !Ref ActivePrayer
        - DynamoDBCrudPolicy:
            TableName: !Ref General
        - DynamoDBCrudPolicy:
            TableName: !Ref Member
        - DynamoDBCrudPolicy:
            TableName: !Ref QueuedPrayer
      Events:
        # API gateway lambda trigger
        ApiPOST:
          Type: Api
          Properties:
            Path: /
            Method: POST
            RestApiId: !Ref LocalTestApi

Outputs:
  PrayerTexterFunctionArn:
    Description: ARN of the PrayerTexter function
    Value: !GetAtt PrayerTexter.Arn
  LocalTestApi:
    Description: "API Gateway endpoint URL for the API"
    Value: !Sub "https://${Api}.execute-api.${AWS::Region}.amazonaws.com/Prod"