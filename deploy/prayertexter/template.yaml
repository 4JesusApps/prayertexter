Transform: AWS::Serverless-2016-10-31

Parameters:
  # The end user messaging SMS pool needs to be set here manually. This needs to be created separately and is managed
  # outside of cloudformation.
  SMSPhonePoolARN:
    Type: String
    Default: arn:aws:sms-voice:us-west-1:681271545794:pool/pool-34c6fe4aaf88416abe070959a2241a8b

Globals:
  Function:
    Timeout: 60
    MemorySize: 128
    Tracing: Active
    Environment:
      Variables:
        # Env variables need to match specific format. See prayertexter config package for details.
        PRAY_CONF_AWS_DB_PRAYER_ACTIVETABLE: !ImportValue db-ActivePrayerTableName
        PRAY_CONF_AWS_DB_INTERCESSORPHONES_TABLE: !ImportValue db-GeneralTableName
        PRAY_CONF_AWS_DB_STATETRACKER_TABLE: !ImportValue db-GeneralTableName
        PRAY_CONF_AWS_DB_MEMBER_TABLE: !ImportValue db-MemberTableName
        PRAY_CONF_AWS_DB_PRAYER_QUEUETABLE: !ImportValue db-QueuedPrayerTableName
        PRAY_CONF_AWS_SMS_PHONEPOOL: !Ref SMSPhonePoolARN

Resources:
  # SNS topic that triggers PrayerTexter lambda function
  SMSReceiver:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: prayertexter-main-trigger
      Tags:
        - Key: prayertexter
          Value: ""

  # Log group for SMS delivery events
  SMSLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: prayertexter-sms
      Tags:
        - Key: prayertexter
          Value: ""

  # Policy that allows sending logs to cloudwatch log group
  SMSLogPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: send-cloudwatch-logs-log-group-prayertexter-sms
      Path: /
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - logs:CreateLogStream
              - logs:DescribeLogStreams
              - logs:PutLogEvents
            Resource: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:prayertexter-sms:*

  # Role that binds SMS to cloudwatch log group policy
  SMSLogRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: end-user-messaging-send-cloudwatch-logs
      Path: /
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: sms-voice.amazonaws.com
            Action: sts:AssumeRole
            Condition:
              StringEquals:
                aws:SourceAccount: !Ref AWS::AccountId
              ArnLike:
                aws:SourceArn: !Sub arn:aws:sms-voice:${AWS::Region}:${AWS::AccountId}:configuration-set/prayertexter
      ManagedPolicyArns:
        - !Ref SMSLogPolicy
      Tags:
        - Key: prayertexter
          Value: ""

  # Lambda function
  PrayerTexter:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: go1.x
    Properties:
      Description: !Sub "Stack ${AWS::StackName} Function PrayerTexter"
      CodeUri: ../../cmd/prayertexter/
      Handler: bootstrap
      Runtime: provided.al2023
      ReservedConcurrentExecutions: 1
      Policies:
        # Grants lambda function access to dynamodb tables
        - DynamoDBCrudPolicy:
            TableName: !ImportValue db-ActivePrayerTableName
        - DynamoDBCrudPolicy:
            TableName: !ImportValue db-GeneralTableName
        - DynamoDBCrudPolicy:
            TableName: !ImportValue db-MemberTableName
        - DynamoDBCrudPolicy:
            TableName: !ImportValue db-QueuedPrayerTableName
        # Grants lambda function access to send SMS
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - sms-voice:SendTextMessage
              Resource: !Ref SMSPhonePoolARN
      Events:
        SNSTriggerTopic:
          Type: SNS
          Properties:
            Topic: !Ref SMSReceiver
      Tags:
        prayertexter: ""

  # Log group for lambda function
  PrayerTexterLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      LogGroupName: !Sub /aws/lambda/${PrayerTexter}
      Tags:
        - Key: prayertexter
          Value: ""

Outputs:
  SMSPhonePoolARN:
    Description: End user messaging SMS pool ARN
    Value: !Ref SMSPhonePoolARN
    Export:
      Name: !Sub "${AWS::StackName}-SMSPhonePoolARN"